// +build !skippackr
// Code generated by github.com/gobuffalo/packr/v2. DO NOT EDIT.

// You can use the "packr2 clean" command to clean up this,
// and any other packr generated files.
package packrd

import (
	"github.com/gobuffalo/packr/v2"
	"github.com/gobuffalo/packr/v2/file/resolver"
)

var _ = func() error {
	const gk = "d8c00c24c4e277b2f88d5107ea934201"
	g := packr.New(gk, "")
	hgr, err := resolver.NewHexGzip(map[string]string{
		"dd1ee035574cfa7beaeca289d9042b01": "1f8b08000000000000ff8c90c152c3300c44effe0a1d9ba1fd825cf905ce1dc5d9a6025b36b243c9df33a919303d71d368a57db37b3ad15394c5b8825eb273deb08f95a70062efd3aab5d0c11111c94c932c05261c289b44b68ddeb01def2a224ba08acf4a9a2ae91a02ad2aef2b9a9eb9945bb2f97ce572a569abe09f43378c0f68e88758d288ffe29523fed2dbfe3bc3b9ff6eca251964d1dd820ebf6703192e30a847e91a9079686f2dd361e71d3bf7e19ea1aff339ddd4b9d9527ea873ec97d9d22b7c2de357000000ffffcdd33bd78a010000",
	})
	if err != nil {
		panic(err)
	}
	g.DefaultResolver = hgr

	func() {
		b := packr.New("migrations", "./migrations")
		b.SetResolver("01_initial.sql", packr.Pointer{ForwardBox: gk, ForwardPath: "dd1ee035574cfa7beaeca289d9042b01"})
	}()
	return nil
}()
